services:
  # from Flink docs
  # https://nightlies.apache.org/flink/flink-docs-release-1.19/docs/deployment/resource-providers/standalone/docker/#flink-with-docker-compose
  jobmanager:
    build:
      context: .
      dockerfile: config/Dockerfile.flink
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - 8081:8081
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    depends_on:
      nifi: # which depends on Kafka broker
        condition: service_healthy
  taskmanager:
    build:
      context: .
      dockerfile: config/Dockerfile.flink
    hostname: taskmanager
    container_name: taskmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 1
    depends_on:
      - jobmanager # which depends on NiFi and Kafka broker
  # from Kafka single-node example https://github.com/apache/kafka/blob/trunk/docker/examples/README.md
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  nifi:
    image: apache/nifi
    container_name: nifi
    hostname: nifi
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: ${NIFI_USERNAME}
      SINGLE_USER_CREDENTIALS_PASSWORD: ${NIFI_PASSWORD}
      NIFI_WEB_HTTPS_HOST: 0.0.0.0
    ports:
      - 8443:8443
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:8443/nifi-api/system-diagnostics"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - broker
      - redis
  redis:
    image: redis
    hostname: redis
    container_name: redis
    command: redis-server
    ports:
      - 6379:6379
  producer:
    build:
      context: .
      dockerfile: config/Dockerfile.producer
    container_name: producer
    hostname: producer
    environment:
      NIFI_USERNAME: ${NIFI_USERNAME}
      NIFI_PASSWORD: ${NIFI_PASSWORD}
    volumes:
      - ./config/nifi_template.xml:/app/nifi_template.xml
    depends_on:
      nifi: # which depends on Kafka broker
        condition: service_healthy
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:19092
    depends_on:
      - broker
  redisinsight:
    image: redis/redisinsight
    container_name: redisinsight
    hostname: redisinsight
    ports:
      - 5540:5540
    depends_on:
      - redis
